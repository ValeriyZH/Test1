[29.09.2021 13:04:38.182] # ЗАПУСТИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ ПРОПУСКА ПО ЗАЯВКЕ НА РАЗОВЫЙ ПРОПУСК
[29.09.2021 13:04:38.183] # установили нужный размер окна браузера
[29.09.2021 13:04:38.314] # заходим на страницу регистрации в VISITORCONTROL
[29.09.2021 13:04:38.588] # логинимся
[29.09.2021 13:04:39.085] # смотрим результат
[29.09.2021 13:04:42.090] # заходим в раздел "Пропуска"
[29.09.2021 13:04:42.181] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:04:42.231] # Заполняем вкладку "Посетитель"
[29.09.2021 13:04:42.232] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:04:42.477] # 1
[29.09.2021 13:04:42.541] # 2
[29.09.2021 13:04:42.890] # 3
[29.09.2021 13:04:42.890] # Открываем список свободных карт доступа
[29.09.2021 13:04:43.179] # Кликаем первую свободную карту
[29.09.2021 13:04:43.292] # Выбираем эту карту
[29.09.2021 13:04:46.345] # coхраняем пропуск
[29.09.2021 13:04:46.434] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:04:55.446] # закрываем окно с пропуском
[29.09.2021 13:04:55.525] # открываем все пропуска
[29.09.2021 13:04:55.857] # выбираем только что созданный пропуск
[29.09.2021 13:04:56.769] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:04:57.143] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:04:57.315] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:04:57.315] ****************************************************************************
[29.09.2021 13:04:57.315] # заходим в раздел "Пропуска"
[29.09.2021 13:04:57.615] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:04:57.690] # Заполняем вкладку "Посетитель"
[29.09.2021 13:04:57.690] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:04:57.911] # 1
[29.09.2021 13:04:57.968] # 2
[29.09.2021 13:04:58.356] # 3
[29.09.2021 13:04:58.356] # Открываем список свободных карт доступа
[29.09.2021 13:04:58.625] # Кликаем первую свободную карту
[29.09.2021 13:04:58.732] # Выбираем эту карту
[29.09.2021 13:05:01.794] # coхраняем пропуск
[29.09.2021 13:05:01.894] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:05:10.903] # закрываем окно с пропуском
[29.09.2021 13:05:11.038] # открываем все пропуска
[29.09.2021 13:05:11.342] # выбираем только что созданный пропуск
[29.09.2021 13:05:12.158] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:05:12.554] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:05:12.745] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:05:12.745] ****************************************************************************
[29.09.2021 13:05:12.745] # заходим в раздел "Пропуска"
[29.09.2021 13:05:13.088] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:05:13.150] # Заполняем вкладку "Посетитель"
[29.09.2021 13:05:13.150] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:05:13.362] # 1
[29.09.2021 13:05:13.429] # 2
[29.09.2021 13:05:14.099] # 3
[29.09.2021 13:05:14.099] # Открываем список свободных карт доступа
[29.09.2021 13:05:14.436] # Кликаем первую свободную карту
[29.09.2021 13:05:14.533] # Выбираем эту карту
[29.09.2021 13:05:17.595] # coхраняем пропуск
[29.09.2021 13:05:17.671] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:05:26.677] # закрываем окно с пропуском
[29.09.2021 13:05:26.757] # открываем все пропуска
[29.09.2021 13:05:27.091] # выбираем только что созданный пропуск
[29.09.2021 13:05:28.047] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:05:28.495] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:05:28.626] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:05:28.626] ****************************************************************************
[29.09.2021 13:05:28.626] # заходим в раздел "Пропуска"
[29.09.2021 13:05:28.925] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:05:28.988] # Заполняем вкладку "Посетитель"
[29.09.2021 13:05:28.988] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:05:29.190] # 1
[29.09.2021 13:05:29.250] # 2
[29.09.2021 13:05:29.770] # 3
[29.09.2021 13:05:29.770] # Открываем список свободных карт доступа
[29.09.2021 13:05:30.077] # Кликаем первую свободную карту
[29.09.2021 13:05:30.177] # Выбираем эту карту
[29.09.2021 13:05:33.232] # coхраняем пропуск
[29.09.2021 13:05:33.327] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:05:42.341] # закрываем окно с пропуском
[29.09.2021 13:05:42.418] # открываем все пропуска
[29.09.2021 13:05:42.735] # выбираем только что созданный пропуск
[29.09.2021 13:05:43.645] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:05:44.000] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:05:44.117] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:05:44.117] ****************************************************************************
[29.09.2021 13:05:44.117] # заходим в раздел "Пропуска"
[29.09.2021 13:05:44.435] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:05:44.519] # Заполняем вкладку "Посетитель"
[29.09.2021 13:05:44.519] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:05:44.772] # 1
[29.09.2021 13:05:44.823] # 2
[29.09.2021 13:05:45.265] # 3
[29.09.2021 13:05:45.265] # Открываем список свободных карт доступа
[29.09.2021 13:05:45.565] # Кликаем первую свободную карту
[29.09.2021 13:05:45.687] # Выбираем эту карту
[29.09.2021 13:05:48.742] # coхраняем пропуск
[29.09.2021 13:05:48.838] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:05:57.842] # закрываем окно с пропуском
[29.09.2021 13:05:57.934] # открываем все пропуска
[29.09.2021 13:05:58.250] # выбираем только что созданный пропуск
[29.09.2021 13:05:59.186] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:05:59.580] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:05:59.810] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:05:59.810] ****************************************************************************
[29.09.2021 13:05:59.810] # заходим в раздел "Пропуска"
[29.09.2021 13:06:00.120] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:06:00.203] # Заполняем вкладку "Посетитель"
[29.09.2021 13:06:00.203] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:06:00.427] # 1
[29.09.2021 13:06:00.591] # 2
[29.09.2021 13:06:01.061] # 3
[29.09.2021 13:06:01.061] # Открываем список свободных карт доступа
[29.09.2021 13:06:01.377] # Кликаем первую свободную карту
[29.09.2021 13:06:01.486] # Выбираем эту карту
[29.09.2021 13:06:04.549] # coхраняем пропуск
[29.09.2021 13:06:04.605] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:06:13.618] # закрываем окно с пропуском
[29.09.2021 13:06:13.734] # открываем все пропуска
[29.09.2021 13:06:14.059] # выбираем только что созданный пропуск
[29.09.2021 13:06:14.899] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:06:15.296] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:06:15.419] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:06:15.419] ****************************************************************************
[29.09.2021 13:06:15.419] # заходим в раздел "Пропуска"
[29.09.2021 13:06:15.768] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:06:15.819] # Заполняем вкладку "Посетитель"
[29.09.2021 13:06:15.819] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:06:16.114] # 1
[29.09.2021 13:06:16.176] # 2
[29.09.2021 13:06:16.566] # 3
[29.09.2021 13:06:16.566] # Открываем список свободных карт доступа
[29.09.2021 13:06:16.894] # Кликаем первую свободную карту
[29.09.2021 13:06:16.990] # Выбираем эту карту
[29.09.2021 13:06:20.047] # coхраняем пропуск
[29.09.2021 13:06:20.154] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:06:29.164] # закрываем окно с пропуском
[29.09.2021 13:06:29.270] # открываем все пропуска
[29.09.2021 13:06:29.581] # выбираем только что созданный пропуск
[29.09.2021 13:06:30.581] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:06:31.023] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:06:31.198] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:06:31.198] ****************************************************************************
[29.09.2021 13:06:31.198] # заходим в раздел "Пропуска"
[29.09.2021 13:06:31.489] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:06:31.589] # Заполняем вкладку "Посетитель"
[29.09.2021 13:06:31.590] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:06:31.909] # 1
[29.09.2021 13:06:31.962] # 2
[29.09.2021 13:06:32.363] # 3
[29.09.2021 13:06:32.363] # Открываем список свободных карт доступа
[29.09.2021 13:06:32.657] # Кликаем первую свободную карту
[29.09.2021 13:06:32.792] # Выбираем эту карту
[29.09.2021 13:06:35.860] # coхраняем пропуск
[29.09.2021 13:06:35.989] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:06:45.002] # закрываем окно с пропуском
[29.09.2021 13:06:45.105] # открываем все пропуска
[29.09.2021 13:06:45.449] # выбираем только что созданный пропуск
[29.09.2021 13:06:46.294] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:06:46.703] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:06:46.823] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:06:46.823] ****************************************************************************
[29.09.2021 13:06:46.823] # заходим в раздел "Пропуска"
[29.09.2021 13:06:47.119] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:06:47.267] # Заполняем вкладку "Посетитель"
[29.09.2021 13:06:47.268] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:06:47.548] # 1
[29.09.2021 13:06:47.620] # 2
[29.09.2021 13:06:47.998] # 3
[29.09.2021 13:06:47.998] # Открываем список свободных карт доступа
[29.09.2021 13:06:48.324] # Кликаем первую свободную карту
[29.09.2021 13:06:48.420] # Выбираем эту карту
[29.09.2021 13:06:51.472] # coхраняем пропуск
[29.09.2021 13:06:51.557] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:07:00.558] # закрываем окно с пропуском
[29.09.2021 13:07:00.683] # открываем все пропуска
[29.09.2021 13:07:00.998] # выбираем только что созданный пропуск
[29.09.2021 13:07:02.065] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:07:02.446] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:07:02.563] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:07:02.564] ****************************************************************************
[29.09.2021 13:07:02.564] # заходим в раздел "Пропуска"
[29.09.2021 13:07:02.863] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:07:02.914] # Заполняем вкладку "Посетитель"
[29.09.2021 13:07:02.914] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:07:03.155] # 1
[29.09.2021 13:07:03.208] # 2
[29.09.2021 13:07:03.626] # 3
[29.09.2021 13:07:03.626] # Открываем список свободных карт доступа
[29.09.2021 13:07:03.978] # Кликаем первую свободную карту
[29.09.2021 13:07:04.090] # Выбираем эту карту
[29.09.2021 13:07:07.151] # coхраняем пропуск
[29.09.2021 13:07:07.230] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:07:16.243] # закрываем окно с пропуском
[29.09.2021 13:07:16.334] # открываем все пропуска
[29.09.2021 13:07:16.679] # выбираем только что созданный пропуск
[29.09.2021 13:07:17.678] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:07:18.027] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:07:18.155] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:07:18.155] ****************************************************************************
[29.09.2021 13:07:18.155] # заходим в раздел "Пропуска"
[29.09.2021 13:07:18.450] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:07:18.557] # Заполняем вкладку "Посетитель"
[29.09.2021 13:07:18.557] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:07:18.811] # 1
[29.09.2021 13:07:18.896] # 2
[29.09.2021 13:07:19.328] # 3
[29.09.2021 13:07:19.328] # Открываем список свободных карт доступа
[29.09.2021 13:07:19.687] # Кликаем первую свободную карту
[29.09.2021 13:07:19.809] # Выбираем эту карту
[29.09.2021 13:07:22.867] # coхраняем пропуск
[29.09.2021 13:07:22.956] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:07:31.959] # закрываем окно с пропуском
[29.09.2021 13:07:32.070] # открываем все пропуска
[29.09.2021 13:07:32.366] # выбираем только что созданный пропуск
[29.09.2021 13:07:33.352] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:07:33.764] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:07:33.886] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:07:33.886] ****************************************************************************
[29.09.2021 13:07:33.886] # заходим в раздел "Пропуска"
[29.09.2021 13:07:34.233] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:07:34.287] # Заполняем вкладку "Посетитель"
[29.09.2021 13:07:34.288] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:07:34.603] # 1
[29.09.2021 13:07:34.658] # 2
[29.09.2021 13:07:35.106] # 3
[29.09.2021 13:07:35.106] # Открываем список свободных карт доступа
[29.09.2021 13:07:35.414] # Кликаем первую свободную карту
[29.09.2021 13:07:35.574] # Выбираем эту карту
[29.09.2021 13:07:38.634] # coхраняем пропуск
[29.09.2021 13:07:38.678] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:07:47.679] # закрываем окно с пропуском
[29.09.2021 13:07:47.837] # открываем все пропуска
[29.09.2021 13:07:48.127] # выбираем только что созданный пропуск
[29.09.2021 13:07:49.361] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:07:49.752] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:07:49.930] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:07:49.930] ****************************************************************************
[29.09.2021 13:07:49.930] # заходим в раздел "Пропуска"
[29.09.2021 13:07:50.237] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:07:50.307] # Заполняем вкладку "Посетитель"
[29.09.2021 13:07:50.307] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:07:50.560] # 1
[29.09.2021 13:07:50.623] # 2
[29.09.2021 13:07:51.025] # 3
[29.09.2021 13:07:51.025] # Открываем список свободных карт доступа
[29.09.2021 13:07:51.307] # Кликаем первую свободную карту
[29.09.2021 13:07:51.410] # Выбираем эту карту
[29.09.2021 13:07:54.467] # coхраняем пропуск
[29.09.2021 13:07:54.595] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:08:03.598] # закрываем окно с пропуском
[29.09.2021 13:08:03.673] # открываем все пропуска
[29.09.2021 13:08:03.955] # выбираем только что созданный пропуск
[29.09.2021 13:08:05.138] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:08:05.522] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:08:05.739] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:08:05.739] ****************************************************************************
[29.09.2021 13:08:05.739] # заходим в раздел "Пропуска"
[29.09.2021 13:08:06.030] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:08:06.127] # Заполняем вкладку "Посетитель"
[29.09.2021 13:08:06.127] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:08:06.437] # 1
[29.09.2021 13:08:06.496] # 2
[29.09.2021 13:08:06.872] # 3
[29.09.2021 13:08:06.872] # Открываем список свободных карт доступа
[29.09.2021 13:08:07.174] # Кликаем первую свободную карту
[29.09.2021 13:08:07.329] # Выбираем эту карту
[29.09.2021 13:08:10.378] # coхраняем пропуск
[29.09.2021 13:08:10.423] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:08:19.424] # закрываем окно с пропуском
[29.09.2021 13:08:19.504] # открываем все пропуска
[29.09.2021 13:08:19.799] # выбираем только что созданный пропуск
[29.09.2021 13:08:20.902] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:08:21.345] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:08:21.519] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:08:21.519] ****************************************************************************
[29.09.2021 13:08:21.519] # заходим в раздел "Пропуска"
[29.09.2021 13:08:21.818] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:08:21.892] # Заполняем вкладку "Посетитель"
[29.09.2021 13:08:21.892] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:08:22.102] # 1
[29.09.2021 13:08:22.161] # 2
[29.09.2021 13:08:22.877] # 3
[29.09.2021 13:08:22.877] # Открываем список свободных карт доступа
[29.09.2021 13:08:23.182] # Кликаем первую свободную карту
[29.09.2021 13:08:23.281] # Выбираем эту карту
[29.09.2021 13:08:26.350] # coхраняем пропуск
[29.09.2021 13:08:26.446] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:08:35.460] # закрываем окно с пропуском
[29.09.2021 13:08:35.590] # открываем все пропуска
[29.09.2021 13:08:35.905] # выбираем только что созданный пропуск
[29.09.2021 13:08:36.876] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:08:37.255] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:08:37.388] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:08:37.388] ****************************************************************************
[29.09.2021 13:08:37.388] # заходим в раздел "Пропуска"
[29.09.2021 13:08:37.736] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:08:37.790] # Заполняем вкладку "Посетитель"
[29.09.2021 13:08:37.790] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:08:37.997] # 1
[29.09.2021 13:08:38.058] # 2
[29.09.2021 13:08:38.457] # 3
[29.09.2021 13:08:38.457] # Открываем список свободных карт доступа
[29.09.2021 13:08:38.744] # Кликаем первую свободную карту
[29.09.2021 13:08:38.852] # Выбираем эту карту
[29.09.2021 13:08:41.985] # coхраняем пропуск
[29.09.2021 13:08:42.083] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:08:51.095] # закрываем окно с пропуском
[29.09.2021 13:08:51.187] # открываем все пропуска
[29.09.2021 13:08:51.502] # выбираем только что созданный пропуск
[29.09.2021 13:08:52.833] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:08:53.189] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:08:53.331] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:08:53.332] ****************************************************************************
[29.09.2021 13:08:53.332] # заходим в раздел "Пропуска"
[29.09.2021 13:08:53.704] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:08:54.001] # Заполняем вкладку "Посетитель"
[29.09.2021 13:08:54.002] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:08:54.318] # 1
[29.09.2021 13:08:54.383] # 2
[29.09.2021 13:08:54.832] # 3
[29.09.2021 13:08:54.832] # Открываем список свободных карт доступа
[29.09.2021 13:08:55.154] # Кликаем первую свободную карту
[29.09.2021 13:08:55.263] # Выбираем эту карту
[29.09.2021 13:08:58.331] # coхраняем пропуск
[29.09.2021 13:08:58.419] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:09:07.420] # закрываем окно с пропуском
[29.09.2021 13:09:07.505] # открываем все пропуска
[29.09.2021 13:09:07.818] # выбираем только что созданный пропуск
[29.09.2021 13:09:08.863] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:09:09.271] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:09:09.509] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:09:09.510] ****************************************************************************
[29.09.2021 13:09:09.510] # заходим в раздел "Пропуска"
[29.09.2021 13:09:09.815] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:09:09.871] # Заполняем вкладку "Посетитель"
[29.09.2021 13:09:09.871] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:09:10.259] # 1
[29.09.2021 13:09:10.319] # 2
[29.09.2021 13:09:10.757] # 3
[29.09.2021 13:09:10.757] # Открываем список свободных карт доступа
[29.09.2021 13:09:11.147] # Кликаем первую свободную карту
[29.09.2021 13:09:11.298] # Выбираем эту карту
[29.09.2021 13:09:14.356] # coхраняем пропуск
[29.09.2021 13:09:14.459] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:09:23.469] # закрываем окно с пропуском
[29.09.2021 13:09:23.563] # открываем все пропуска
[29.09.2021 13:09:23.919] # выбираем только что созданный пропуск
[29.09.2021 13:09:25.528] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:09:25.877] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:09:26.202] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:09:26.202] ****************************************************************************
[29.09.2021 13:09:26.202] # заходим в раздел "Пропуска"
[29.09.2021 13:09:26.452] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:09:26.538] # Заполняем вкладку "Посетитель"
[29.09.2021 13:09:26.538] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:09:26.775] # 1
[29.09.2021 13:09:26.854] # 2
[29.09.2021 13:09:27.295] # 3
[29.09.2021 13:09:27.295] # Открываем список свободных карт доступа
[29.09.2021 13:09:27.662] # Кликаем первую свободную карту
[29.09.2021 13:09:27.815] # Выбираем эту карту
[29.09.2021 13:09:30.877] # coхраняем пропуск
[29.09.2021 13:09:30.999] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:09:40.000] # закрываем окно с пропуском
[29.09.2021 13:09:40.108] # открываем все пропуска
[29.09.2021 13:09:40.425] # выбираем только что созданный пропуск
[29.09.2021 13:09:41.705] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:09:42.114] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:09:42.276] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:09:42.277] ****************************************************************************
[29.09.2021 13:09:42.277] # заходим в раздел "Пропуска"
[29.09.2021 13:09:42.545] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:09:42.600] # Заполняем вкладку "Посетитель"
[29.09.2021 13:09:42.600] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:09:42.904] # 1
[29.09.2021 13:09:42.965] # 2
[29.09.2021 13:09:43.355] # 3
[29.09.2021 13:09:43.355] # Открываем список свободных карт доступа
[29.09.2021 13:09:43.607] # Кликаем первую свободную карту
[29.09.2021 13:09:43.819] # Выбираем эту карту
[29.09.2021 13:09:46.877] # coхраняем пропуск
[29.09.2021 13:09:46.964] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:09:55.972] # закрываем окно с пропуском
[29.09.2021 13:09:56.052] # открываем все пропуска
[29.09.2021 13:09:56.397] # выбираем только что созданный пропуск
[29.09.2021 13:09:57.924] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:09:58.274] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:09:58.405] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:09:58.405] ****************************************************************************
[29.09.2021 13:09:58.405] # заходим в раздел "Пропуска"
[29.09.2021 13:09:58.710] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:09:58.860] # Заполняем вкладку "Посетитель"
[29.09.2021 13:09:58.860] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:09:59.072] # 1
[29.09.2021 13:09:59.132] # 2
[29.09.2021 13:09:59.541] # 3
[29.09.2021 13:09:59.541] # Открываем список свободных карт доступа
[29.09.2021 13:09:59.829] # Кликаем первую свободную карту
[29.09.2021 13:09:59.925] # Выбираем эту карту
[29.09.2021 13:10:02.991] # coхраняем пропуск
[29.09.2021 13:10:03.074] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:10:12.075] # закрываем окно с пропуском
[29.09.2021 13:10:12.200] # открываем все пропуска
[29.09.2021 13:10:12.491] # выбираем только что созданный пропуск
[29.09.2021 13:10:13.504] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:10:13.958] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:10:14.081] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:10:14.081] ****************************************************************************
[29.09.2021 13:10:14.081] # заходим в раздел "Пропуска"
[29.09.2021 13:10:14.368] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:10:14.503] # Заполняем вкладку "Посетитель"
[29.09.2021 13:10:14.503] # Выбираем фамилию из выпадающего списка фамилий в заявках
[29.09.2021 13:10:14.772] # 1
[29.09.2021 13:10:14.830] # 2
[29.09.2021 13:10:15.317] # 3
[29.09.2021 13:10:15.318] # Открываем список свободных карт доступа
[29.09.2021 13:10:15.651] # Кликаем первую свободную карту
[29.09.2021 13:10:15.751] # Выбираем эту карту
[29.09.2021 13:10:18.810] # coхраняем пропуск
[29.09.2021 13:10:18.887] # обязательно здесь time.sleep(), иначе пропуск не сохраняется
[29.09.2021 13:10:27.892] # закрываем окно с пропуском
[29.09.2021 13:10:28.007] # открываем все пропуска
[29.09.2021 13:10:28.311] # выбираем только что созданный пропуск
[29.09.2021 13:10:29.241] # кликаем кнопку "Внести отметку" ("Время сдачи пропуска")
[29.09.2021 13:10:29.640] # кликаем кнопку "Ок" ("Отметка о выходе из здания внесена!")
[29.09.2021 13:10:29.829] # ЗАВЕРШИЛИ ПОЗИТИВНЫЙ СМОУК-ТЕСТ НА СОЗДАНИЕ РАЗОВОГО ПРОПУСКА ПО ЗАЯВКЕ
[29.09.2021 13:10:29.829] ****************************************************************************
[29.09.2021 13:10:29.829] # заходим в раздел "Пропуска"
[29.09.2021 13:10:30.151] # заходим на страницу создания пропуска по заявке
[29.09.2021 13:10:40.512] An error has been caught in function 'pytest_pyfunc_call', process 'MainProcess' (2964), thread 'MainThread' (11896):
Traceback (most recent call last):

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\runpy.py", line 197, in _run_module_as_main
    return _run_code(code, main_globals, None,
           |         |     -> {'__name__': '__main__', '__doc__': None, '__package__': '', '__loader__': <zipimporter object "C:\Users\zhuravlev\AppData\Lo...
           |         -> <code object <module> at 0x0000015DE5F1E450, file "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\Scripts\pytest.e...
           -> <function _run_code at 0x0000015DE5BBE9D0>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\runpy.py", line 87, in _run_code
    exec(code, run_globals)
         |     -> {'__name__': '__main__', '__doc__': None, '__package__': '', '__loader__': <zipimporter object "C:\Users\zhuravlev\AppData\Lo...
         -> <code object <module> at 0x0000015DE5F1E450, file "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\Scripts\pytest.e...

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\Scripts\pytest.exe\__main__.py", line 7, in <module>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\config\__init__.py", line 185, in console_main
    code = main()
           -> <function main at 0x0000015DE64E4C10>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\config\__init__.py", line 162, in main
    ret: Union[ExitCode, int] = config.hook.pytest_cmdline_main(
         |     |                |      |    -> <_HookCaller 'pytest_cmdline_main'>
         |     |                |      -> <pluggy._hooks._HookRelay object at 0x0000015DE5F199D0>
         |     |                -> <_pytest.config.Config object at 0x0000015DE7F1D490>
         |     -> <enum 'ExitCode'>
         -> typing.Union

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_hooks.py", line 265, in __call__
    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)
           |    |         |    |     |    |                |       -> True
           |    |         |    |     |    |                -> {'config': <_pytest.config.Config object at 0x0000015DE7F1D490>}
           |    |         |    |     |    -> <function _HookCaller.get_hookimpls at 0x0000015DE640E5E0>
           |    |         |    |     -> <_HookCaller 'pytest_cmdline_main'>
           |    |         |    -> 'pytest_cmdline_main'
           |    |         -> <_HookCaller 'pytest_cmdline_main'>
           |    -> <bound method PluginManager._hookexec of <_pytest.config.PytestPluginManager object at 0x0000015DE7EBD490>>
           -> <_HookCaller 'pytest_cmdline_main'>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_manager.py", line 80, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
           |    |               |          |        |       -> True
           |    |               |          |        -> {'config': <_pytest.config.Config object at 0x0000015DE7F1D490>}
           |    |               |          -> [<HookImpl plugin_name='main', plugin=<module '_pytest.main' from 'C:\\Users\\zhuravlev\\AppData\\Local\\Programs\\Python\\Py...
           |    |               -> 'pytest_cmdline_main'
           |    -> <function _multicall at 0x0000015DE64018B0>
           -> <_pytest.config.PytestPluginManager object at 0x0000015DE7EBD490>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_callers.py", line 39, in _multicall
    res = hook_impl.function(*args)
          |         |         -> [<_pytest.config.Config object at 0x0000015DE7F1D490>]
          |         -> <function pytest_cmdline_main at 0x0000015DE659EE50>
          -> <HookImpl plugin_name='main', plugin=<module '_pytest.main' from 'C:\\Users\\zhuravlev\\AppData\\Local\\Programs\\Python\\Pyt...

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\main.py", line 316, in pytest_cmdline_main
    return wrap_session(config, _main)
           |            |       -> <function _main at 0x0000015DE659EEE0>
           |            -> <_pytest.config.Config object at 0x0000015DE7F1D490>
           -> <function wrap_session at 0x0000015DE659EDC0>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\main.py", line 269, in wrap_session
    session.exitstatus = doit(config, session) or 0
    |       |            |    |       -> <Session Кастомные тесты exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=1>
    |       |            |    -> <_pytest.config.Config object at 0x0000015DE7F1D490>
    |       |            -> <function _main at 0x0000015DE659EEE0>
    |       -> <ExitCode.OK: 0>
    -> <Session Кастомные тесты exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=1>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\main.py", line 323, in _main
    config.hook.pytest_runtestloop(session=session)
    |      |    |                          -> <Session Кастомные тесты exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=1>
    |      |    -> <_HookCaller 'pytest_runtestloop'>
    |      -> <pluggy._hooks._HookRelay object at 0x0000015DE5F199D0>
    -> <_pytest.config.Config object at 0x0000015DE7F1D490>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_hooks.py", line 265, in __call__
    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)
           |    |         |    |     |    |                |       -> True
           |    |         |    |     |    |                -> {'session': <Session Кастомные тесты exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=1>}
           |    |         |    |     |    -> <function _HookCaller.get_hookimpls at 0x0000015DE640E5E0>
           |    |         |    |     -> <_HookCaller 'pytest_runtestloop'>
           |    |         |    -> 'pytest_runtestloop'
           |    |         -> <_HookCaller 'pytest_runtestloop'>
           |    -> <bound method PluginManager._hookexec of <_pytest.config.PytestPluginManager object at 0x0000015DE7EBD490>>
           -> <_HookCaller 'pytest_runtestloop'>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_manager.py", line 80, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
           |    |               |          |        |       -> True
           |    |               |          |        -> {'session': <Session Кастомные тесты exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=1>}
           |    |               |          -> [<HookImpl plugin_name='main', plugin=<module '_pytest.main' from 'C:\\Users\\zhuravlev\\AppData\\Local\\Programs\\Python\\Py...
           |    |               -> 'pytest_runtestloop'
           |    -> <function _multicall at 0x0000015DE64018B0>
           -> <_pytest.config.PytestPluginManager object at 0x0000015DE7EBD490>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_callers.py", line 39, in _multicall
    res = hook_impl.function(*args)
          |         |         -> [<Session Кастомные тесты exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=1>]
          |         -> <function pytest_runtestloop at 0x0000015DE65A2040>
          -> <HookImpl plugin_name='main', plugin=<module '_pytest.main' from 'C:\\Users\\zhuravlev\\AppData\\Local\\Programs\\Python\\Pyt...

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\main.py", line 348, in pytest_runtestloop
    item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)
    |    |                                        |              -> None
    |    |                                        -> <Function test_positive_smouk_temporary_pass>
    |    -> <member 'config' of 'Node' objects>
    -> <Function test_positive_smouk_temporary_pass>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_hooks.py", line 265, in __call__
    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)
           |    |         |    |     |    |                |       -> True
           |    |         |    |     |    |                -> {'item': <Function test_positive_smouk_temporary_pass>, 'nextitem': None}
           |    |         |    |     |    -> <function _HookCaller.get_hookimpls at 0x0000015DE640E5E0>
           |    |         |    |     -> <_HookCaller 'pytest_runtest_protocol'>
           |    |         |    -> 'pytest_runtest_protocol'
           |    |         -> <_HookCaller 'pytest_runtest_protocol'>
           |    -> <bound method PluginManager._hookexec of <_pytest.config.PytestPluginManager object at 0x0000015DE7EBD490>>
           -> <_HookCaller 'pytest_runtest_protocol'>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_manager.py", line 80, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
           |    |               |          |        |       -> True
           |    |               |          |        -> {'item': <Function test_positive_smouk_temporary_pass>, 'nextitem': None}
           |    |               |          -> [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from 'C:\\Users\\zhuravlev\\AppData\\Local\\Programs\\Python...
           |    |               -> 'pytest_runtest_protocol'
           |    -> <function _multicall at 0x0000015DE64018B0>
           -> <_pytest.config.PytestPluginManager object at 0x0000015DE7EBD490>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_callers.py", line 39, in _multicall
    res = hook_impl.function(*args)
          |         |         -> [<Function test_positive_smouk_temporary_pass>, None]
          |         -> <function pytest_runtest_protocol at 0x0000015DE659B8B0>
          -> <HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from 'C:\\Users\\zhuravlev\\AppData\\Local\\Programs\\Python\...

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\runner.py", line 109, in pytest_runtest_protocol
    runtestprotocol(item, nextitem=nextitem)
    |               |              -> None
    |               -> <Function test_positive_smouk_temporary_pass>
    -> <function runtestprotocol at 0x0000015DE659B940>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\runner.py", line 126, in runtestprotocol
    reports.append(call_and_report(item, "call", log))
    |       |      |               |             -> True
    |       |      |               -> <Function test_positive_smouk_temporary_pass>
    |       |      -> <function call_and_report at 0x0000015DE659BD30>
    |       -> <method 'append' of 'list' objects>
    -> [<TestReport 'test_100_by_request_positive_smoke_request_one-time_pass.py::test_positive_smouk_temporary_pass' when='setup' o...

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\runner.py", line 215, in call_and_report
    call = call_runtest_hook(item, when, **kwds)
           |                 |     |       -> {}
           |                 |     -> 'call'
           |                 -> <Function test_positive_smouk_temporary_pass>
           -> <function call_runtest_hook at 0x0000015DE659BE50>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\runner.py", line 254, in call_runtest_hook
    return CallInfo.from_call(
           |        -> <classmethod object at 0x0000015DE6596B20>
           -> <class '_pytest.runner.CallInfo'>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\runner.py", line 311, in from_call
    result: Optional[TResult] = func()
            |        |          -> <function call_runtest_hook.<locals>.<lambda> at 0x0000015DE8CB9B80>
            |        -> +TResult
            -> typing.Optional

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\runner.py", line 255, in <lambda>
    lambda: ihook(item=item, **kwds), when=when, reraise=reraise
            |          |       -> {}
            |          -> <Function test_positive_smouk_temporary_pass>
            -> <_HookCaller 'pytest_runtest_call'>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_hooks.py", line 265, in __call__
    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)
           |    |         |    |     |    |                |       -> False
           |    |         |    |     |    |                -> {'item': <Function test_positive_smouk_temporary_pass>}
           |    |         |    |     |    -> <function _HookCaller.get_hookimpls at 0x0000015DE640E5E0>
           |    |         |    |     -> <_HookCaller 'pytest_runtest_call'>
           |    |         |    -> 'pytest_runtest_call'
           |    |         -> <_HookCaller 'pytest_runtest_call'>
           |    -> <bound method PluginManager._hookexec of <_pytest.config.PytestPluginManager object at 0x0000015DE7EBD490>>
           -> <_HookCaller 'pytest_runtest_call'>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_manager.py", line 80, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
           |    |               |          |        |       -> False
           |    |               |          |        -> {'item': <Function test_positive_smouk_temporary_pass>}
           |    |               |          -> [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from 'C:\\Users\\zhuravlev\\AppData\\Local\\Programs\\Python...
           |    |               -> 'pytest_runtest_call'
           |    -> <function _multicall at 0x0000015DE64018B0>
           -> <_pytest.config.PytestPluginManager object at 0x0000015DE7EBD490>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_callers.py", line 39, in _multicall
    res = hook_impl.function(*args)
          |         |         -> [<Function test_positive_smouk_temporary_pass>]
          |         -> <function pytest_runtest_call at 0x0000015DE659BAF0>
          -> <HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from 'C:\\Users\\zhuravlev\\AppData\\Local\\Programs\\Python\...

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\runner.py", line 162, in pytest_runtest_call
    item.runtest()
    |    -> <function Function.runtest at 0x0000015DE7DEDF70>
    -> <Function test_positive_smouk_temporary_pass>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\python.py", line 1641, in runtest
    self.ihook.pytest_pyfunc_call(pyfuncitem=self)
    |    |                                   -> <Function test_positive_smouk_temporary_pass>
    |    -> <property object at 0x0000015DE65094F0>
    -> <Function test_positive_smouk_temporary_pass>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_hooks.py", line 265, in __call__
    return self._hookexec(self.name, self.get_hookimpls(), kwargs, firstresult)
           |    |         |    |     |    |                |       -> True
           |    |         |    |     |    |                -> {'pyfuncitem': <Function test_positive_smouk_temporary_pass>}
           |    |         |    |     |    -> <function _HookCaller.get_hookimpls at 0x0000015DE640E5E0>
           |    |         |    |     -> <_HookCaller 'pytest_pyfunc_call'>
           |    |         |    -> 'pytest_pyfunc_call'
           |    |         -> <_HookCaller 'pytest_pyfunc_call'>
           |    -> <bound method PluginManager._hookexec of <_pytest.config.PytestPluginManager object at 0x0000015DE7EBD490>>
           -> <_HookCaller 'pytest_pyfunc_call'>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_manager.py", line 80, in _hookexec
    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)
           |    |               |          |        |       -> True
           |    |               |          |        -> {'pyfuncitem': <Function test_positive_smouk_temporary_pass>}
           |    |               |          -> [<HookImpl plugin_name='python', plugin=<module '_pytest.python' from 'C:\\Users\\zhuravlev\\AppData\\Local\\Programs\\Python...
           |    |               -> 'pytest_pyfunc_call'
           |    -> <function _multicall at 0x0000015DE64018B0>
           -> <_pytest.config.PytestPluginManager object at 0x0000015DE7EBD490>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\pluggy\_callers.py", line 39, in _multicall
    res = hook_impl.function(*args)
          |         |         -> [<Function test_positive_smouk_temporary_pass>]
          |         -> <function pytest_pyfunc_call at 0x0000015DE7DE0670>
          -> <HookImpl plugin_name='python', plugin=<module '_pytest.python' from 'C:\\Users\\zhuravlev\\AppData\\Local\\Programs\\Python\...

> File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\_pytest\python.py", line 183, in pytest_pyfunc_call
    result = testfunction(**testargs)
             |              -> {'browser': <selenium.webdriver.chrome.webdriver.WebDriver (session="f9f560c910eca26e210cc58da50e585b")>}
             -> <function test_positive_smouk_temporary_pass at 0x0000015DE8CB98B0>

  File "C:\Users\zhuravlev\source\repos\Test1\Кастомные тесты\test_100_by_request_positive_smoke_request_one-time_pass.py", line 51, in test_positive_smouk_temporary_pass
    Base.element_exists_and_click(browser, S.xpath_raz_propusk_by_request)
    |    |                        |        | -> '//div/a[@title="Оформление пропуска по заявке"]'
    |    |                        |        -> <class 'selectorss.Selectorss'>
    |    |                        -> <selenium.webdriver.chrome.webdriver.WebDriver (session="f9f560c910eca26e210cc58da50e585b")>
    |    -> <function BasePage.element_exists_and_click at 0x0000015DE8CB9310>
    -> <class 'base_page.BasePage'>

  File "C:\Users\zhuravlev\source\repos\Test1\base_page.py", line 39, in element_exists_and_click
    assert BasePage.assertElementIsPresentByXPath_Click(self, xpath), f'Элемента {xpath} на странице нет'
           |        |                                   |     -> '//div/a[@title="Оформление пропуска по заявке"]'
           |        |                                   -> <selenium.webdriver.chrome.webdriver.WebDriver (session="f9f560c910eca26e210cc58da50e585b")>
           |        -> <function BasePage.assertElementIsPresentByXPath_Click at 0x0000015DE8A194C0>
           -> <class 'base_page.BasePage'>

  File "C:\Users\zhuravlev\source\repos\Test1\base_page.py", line 26, in assertElementIsPresentByXPath_Click
    element = self.find_element_by_xpath(xpath).click()
              |    |                     -> '//div/a[@title="Оформление пропуска по заявке"]'
              |    -> <function WebDriver.find_element_by_xpath at 0x0000015DE86DEAF0>
              -> <selenium.webdriver.chrome.webdriver.WebDriver (session="f9f560c910eca26e210cc58da50e585b")>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\remote\webelement.py", line 80, in click
    self._execute(Command.CLICK_ELEMENT)
    |    |        |       -> 'clickElement'
    |    |        -> <class 'selenium.webdriver.remote.command.Command'>
    |    -> <function WebElement._execute at 0x0000015DE84DB280>
    -> <selenium.webdriver.remote.webelement.WebElement (session="f9f560c910eca26e210cc58da50e585b", element="a4367f43-a18b-46da-95e...

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\remote\webelement.py", line 633, in _execute
    return self._parent.execute(command, params)
           |    |       |       |        -> {'id': 'a4367f43-a18b-46da-95e6-cc514cec55ad', 'sessionId': 'f9f560c910eca26e210cc58da50e585b'}
           |    |       |       -> 'clickElement'
           |    |       -> <function WebDriver.execute at 0x0000015DE86DE820>
           |    -> <selenium.webdriver.chrome.webdriver.WebDriver (session="f9f560c910eca26e210cc58da50e585b")>
           -> <selenium.webdriver.remote.webelement.WebElement (session="f9f560c910eca26e210cc58da50e585b", element="a4367f43-a18b-46da-95e...

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\remote\webdriver.py", line 321, in execute
    self.error_handler.check_response(response)
    |    |             |              -> {'status': 400, 'value': '{"value":{"error":"element not interactable","message":"element not interactable\\n  (Session info:...
    |    |             -> <function ErrorHandler.check_response at 0x0000015DE86CE790>
    |    -> <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000015DE8CAEAF0>
    -> <selenium.webdriver.chrome.webdriver.WebDriver (session="f9f560c910eca26e210cc58da50e585b")>

  File "C:\Users\zhuravlev\AppData\Local\Programs\Python\Python39\lib\site-packages\selenium\webdriver\remote\errorhandler.py", line 242, in check_response
    raise exception_class(message, screen, stacktrace)
          |               |        |       -> None
          |               |        -> None
          |               -> 'element not interactable\n  (Session info: chrome=94.0.4606.61)'
          -> <class 'selenium.common.exceptions.ElementNotInteractableException'>

selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable
  (Session info: chrome=94.0.4606.61)

